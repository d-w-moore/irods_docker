#
# iRODS Packages Builder Image.
#
FROM ubuntu:16.04 
#as irods_package_builder

#-- dwm ---
COPY ./ttmp/irods /irods
#ADD  irods-externals.tgz  /opt
#----------

ARG docker_var="misc"
ENV DOCKER_VAR ${docker_var}

ARG irods_repo="ttmp/irods"
#ARG irods_repo="https://github.com/d-w-moore/irods"
ENV IRODS_BUILD_IRODS_REPO ${irods_repo}

#ARG irods_branch="deepdir_for_iput_options_tst"
#ARG irods_branch="4-2-stable"
ARG irods_branch="newbr"
ENV IRODS_BUILD_IRODS_COMMIT ${irods_branch}

ARG icommands_repo="https://github.com/irods/irods_client_icommands"
ENV IRODS_BUILD_ICOMMANDS_REPO ${icommands_repo}

ARG icommands_branch="4-2-stable"
ENV IRODS_BUILD_ICOMMANDS_COMMIT ${icommands_branch}

ARG cmake_path="/opt/irods-externals/cmake3.11.4-0/bin"
#ARG cmake_path="/opt/irods-externals/cmake3.5.2-0/bin"
ENV PATH ${cmake_path}:$PATH

ARG clang_path="/opt/irods-externals/clang6.0-0/bin"
#ARG clang_path="/opt/irods-externals/clang3.8-0/bin"
ENV PATH ${clang_path}:$PATH

#ADD preload_${DOCKER_VAR}.sh /
ADD build_irods_packages_${DOCKER_VAR}.sh /

#RUN touch /thing.aaa.$DOCKER_VAR
#RUN echo aaa $DOCKER_VAR

# Install iRODS dependencies.

#./preload_${DOCKER_VAR}.sh

RUN apt-get update && \
    apt-get install -y apt-transport-https git vim postgresql wget lsb-release ninja-build python \
                       libssl-dev libpam0g-dev unixodbc-dev libkrb5-dev sudo libfuse-dev libcurl4-gnutls-dev \
                       libbz2-dev python-psutil python-requests libxml2-dev zlib1g-dev odbc-postgresql python-dev \
                       make gcc help2man libjson-perl python-jsonschema super lsof 

# Install irods-externals packages.
RUN wget -qO - https://core-dev.irods.org/irods-core-dev-signing-key.asc | apt-key add -; \
    echo "deb [arch=amd64] https://core-dev.irods.org/apt/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/renci-irods-core-dev.list; \
    apt-get update && \
    apt-get install -y less tmux && \
    apt-get install -y irods-externals* && \
    chmod u+x /build_irods_packages_${DOCKER_VAR}.sh && \
    ./build_irods_packages_${DOCKER_VAR}.sh

#
# iRODS Test Environment Image.
#
#FROM ubuntu:16.04
# Copy iRODS packages into image.
#COPY --from=irods_package_builder /irods_build/*.deb /icommands_build/*.deb /

RUN apt-get update && \
    apt-get install -y ccache cmake make g++-multilib gdb \
    pkg-config coreutils python3-pexpect python-pexpect manpages-dev git \
    ninja-build capnproto libcapnp-dev && \
    apt-get install -y apt-transport-https vim postgresql wget lsb-release python python-pip \
                       sudo python-psutil python-requests odbc-postgresql libfuse2 libjson-perl \
                       psmisc  valgrind   python-jsonschema libssl-dev super lsof unixodbc && \
    wget -qO - https://core-dev.irods.org/irods-core-dev-signing-key.asc | apt-key add -; \
    echo "deb [arch=amd64] https://core-dev.irods.org/apt/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/renci-irods-core-dev.list; \
    apt-get update && \
    apt-get install -y irods-externals*; \
    pip install xmlrunner \
    ; ( cd /root ; git clone https://github.com/mozilla/rr.git ; \
      mkdir obj ; cd obj ; cmake ../rr ; make -j6 ; make install )

# Setup ICAT database and install iRODS packages (no setup).
ADD db_commands.txt /
RUN service postgresql start && su - postgres -c 'psql -f /db_commands.txt'; \
    dpkg -i /*_build/irods-runtime*.deb \
            /*_build/irods-dev*.deb \
            /*_build/irods-icommands*.deb \
            /*_build/irods-server*.deb \
            /*_build/irods-database-plugin-postgres*.deb

# Set command to execute when launching the container.
#ADD invoke_valgrind /
ADD start.sh /
RUN chmod u+x /start.sh
ENTRYPOINT ["/bin/bash"]
